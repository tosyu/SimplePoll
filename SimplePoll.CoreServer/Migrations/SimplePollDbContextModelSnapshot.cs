// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimplePoll.CoreServer.Data;

#nullable disable

namespace SimplePoll.CoreServer.Migrations
{
    [DbContext(typeof(SimplePollDbContext))]
    partial class SimplePollDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Polls")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SimplePoll.CoreServer.Data.Models.Poll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("Id");

                    b.ToTable("Polls", "Polls");
                });

            modelBuilder.Entity("SimplePoll.CoreServer.Data.Models.PollAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PollElementId")
                        .HasColumnType("int");

                    b.Property<int>("PollSubmissionId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PollElementId");

                    b.HasIndex("PollSubmissionId");

                    b.ToTable("Answers", "Polls");
                });

            modelBuilder.Entity("SimplePoll.CoreServer.Data.Models.PollElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Max")
                        .HasColumnType("int");

                    b.Property<int?>("Min")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("PollId")
                        .HasColumnType("int");

                    b.Property<int?>("Subtype")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PollId");

                    b.ToTable("Elements", "Polls");
                });

            modelBuilder.Entity("SimplePoll.CoreServer.Data.Models.PollElementValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("PollElementId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PollElementId");

                    b.ToTable("Values", "Polls");
                });

            modelBuilder.Entity("SimplePoll.CoreServer.Data.Models.PollSubmission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PollId")
                        .HasColumnType("int");

                    b.Property<string>("SubmissionUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PollId");

                    b.ToTable("Submissions", "Polls");
                });

            modelBuilder.Entity("SimplePoll.CoreServer.Data.Models.PollAnswer", b =>
                {
                    b.HasOne("SimplePoll.CoreServer.Data.Models.PollElement", "PollElement")
                        .WithMany("Answers")
                        .HasForeignKey("PollElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimplePoll.CoreServer.Data.Models.PollSubmission", "PollSubmission")
                        .WithMany("Answers")
                        .HasForeignKey("PollSubmissionId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("PollElement");

                    b.Navigation("PollSubmission");
                });

            modelBuilder.Entity("SimplePoll.CoreServer.Data.Models.PollElement", b =>
                {
                    b.HasOne("SimplePoll.CoreServer.Data.Models.Poll", "Poll")
                        .WithMany("Elements")
                        .HasForeignKey("PollId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Poll");
                });

            modelBuilder.Entity("SimplePoll.CoreServer.Data.Models.PollElementValue", b =>
                {
                    b.HasOne("SimplePoll.CoreServer.Data.Models.PollElement", "PollElement")
                        .WithMany("Values")
                        .HasForeignKey("PollElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PollElement");
                });

            modelBuilder.Entity("SimplePoll.CoreServer.Data.Models.PollSubmission", b =>
                {
                    b.HasOne("SimplePoll.CoreServer.Data.Models.Poll", "Poll")
                        .WithMany("Submissions")
                        .HasForeignKey("PollId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Poll");
                });

            modelBuilder.Entity("SimplePoll.CoreServer.Data.Models.Poll", b =>
                {
                    b.Navigation("Elements");

                    b.Navigation("Submissions");
                });

            modelBuilder.Entity("SimplePoll.CoreServer.Data.Models.PollElement", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Values");
                });

            modelBuilder.Entity("SimplePoll.CoreServer.Data.Models.PollSubmission", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
